// Main 

public class Main {
    public static void main(String[] args) {
        Regtangulo Regtangulo1 = new Regtangulo (2 , 1 , 9, 1, 2, 3.5 , 9, 3.5);
        //Area 
        System.out.println("El area del regtangulo es : " + Regtangulo1.area());
        //Es cuadrado? 
        System.out.println(Regtangulo1.cuadrado() ? "El regtangulo es un cuadrado, sus lados son todos iguales" : "El regtangulo no es un cuadrado");
        //Largo superior del regtangulo 
        System.out.println(Regtangulo1.ladoSuperior() ? "El lado superior es: " + Regtangulo1.ladoSuperior() : "El lado superior es: " + Regtangulo1.ladoSuperior());
        //Acostado o parado?
        System.out.println(Regtangulo1.posicion() ? "El regtangulo esta acostado" : "El regtangulo esta parado");
        
    }
}

// PUNTO GEOMETRICO 
public class PuntoGeometrico{
     //--------------Atributos---------------
     private int X;
     private int Y;
    
     //--------------Contructores--------------
     public PuntoGeometrico(){
         //VALORES POR DEFECTO
         X = 0;
         Y = 0;
     }

     //----------------Métodos-------------
     //GET 
     public int getX(){
        return this.X;
    }   
    public int getY(){
        return this.Y;
    }
    //SET - desplazamiento de los puntos 
    public int setX (int nuevaX){
        return this.X=nuevaX;
    }
    public double setY(double nuevaY){
        return this.Y=nuevaY;
    }

     //Calcular la distancia euclídea.

     public double euclidea(){
        //double cuadrado = Math.pow(numero, 2);
         double distancia = Math.pow ((X - setX(X)) , 2 + (Y - setY(Y)) , 2); 
         return Math.sqrt(distancia);

     }
}


// REGTANGULO

public class Regtangulo {
            //   v1    v2
            //      ▭
            //   v3    v4            

    //------------Atributos----------------
    private int V1X;
    private int V1Y;
    private int V2X;
    private int V2Y;
    private int V3X;
    private int V3Y;
    private int V4X;
    private int V4Y;

    //--------------Constructores---------------

    public Regtangulo(){
        V1X=0;
        V1Y=0;
        V2X=0;
        V2Y=0;
        V3X=0;
        V3Y=0;
        V4X=0;
        V4Y=0;
    }
 //------------------Métodos------------------------------
     //GET 
        public int getV1X(){
            return this.V1X;
        }   
        public int getV1Y(){
            return this.V1Y;
        }
        public int getV2X(){
            return this.V2X;
        }   
        public int getV2Y(){
            return this.V2Y;
        }
        public int getV3X(){
            return this.V3X;
        }   
        public int getV3Y(){
            return this.V3Y;
        }
        public int getV4X(){
            return this.V4X;
        }   
        public int getV4Y(){
            return this.V4Y;
        }
    //SET 
    public int setV1X(int nuevoV1X){
        return this.V1X=nuevoV1X;
    }
    public double setV1Y(double nuevoV1Y){
        return this.V1Y=nuevoV1Y;
    }
    public int setV2X(int nuevoV2X){
        return this.V2X=nuevoV2X;
    }
    public double setV2Y(double nuevoV2Y){
        return this.V2Y=nuevoV2Y;
    }
    public int setV3X(int nuevoV3X){
        return this.V3X=nuevoV3X;
    }
    public double setV3Y(double nuevoV3Y){
        return this.V3Y=nuevoV3Y;
    }
    public int setV4X(int nuevoV4X){
        return this.V4X=nuevoV4X;
    }
    public double setV4Y(double nuevoV4Y){
        return this.V4Y=nuevoV4Y;
    }

//Largo del lado superior (V1 y V2)
public double largo(){
    double largo = Math.pow ((V2X - V1X) , 2 + (V2Y - V1Y), 2);
    return Math.sqrt(largo);
}
// Largo del ancho del regtangulo (V2 y V4)
public double ancho(){
    double ancho= Math.pow((V4X - V2X), 2 + (V4Y + V2Y), 2);
    return Math.sqrt(ancho);
}
//Calcular el Área del rectángulo
public double area(){
    double area= largo() * ancho();
    return area; 
}

//Es cuadrado?
public double cuadrado(){
    boolean cuadrado= false;
    if(largo() == ancho()){
        return cuadrado= true;
    }
    else {
        return cuadrado;
    }
}
//Largo del lado superior 
public double ladoSuperior(){
    double sonIguales=0;
    if (largo()> ancho()){
        return largo();
    }
    if (largo()< ancho()){
        return ancho();
    } 
    else {
        return sonIguales;
    }
    
}

//Acostado o parado? (Parado=false , Acostado=true) 
public boolean posicion(){
    boolean posicion = false;
    if (largo()> ancho()){
        return posicion= true; 
    }
    else{
        return posicion;
    }
    
}



}

